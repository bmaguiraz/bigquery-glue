https://www.ga4bigquery.com/tutorial-how-to-flatten-the-ga4-bigquery-export-schema-for-relational-databases-using-unnest/




select 
    user_pseudo_id,
    event_timestamp,
    event_name,
    user_properties.key,
    user_properties.value.string_value,
    user_properties.value.int_value,
    user_properties.value.float_value,
    user_properties.value.double_value,
    user_properties.value.set_timestamp_micros,
    concat(user_pseudo_id,event_timestamp,event_name,dedup_id) as join_key
from (
    select 
        row_number() over(partition by user_pseudo_id, event_timestamp, event_name) as dedup_id,
        *
    from
        -- change this to your google analytics 4 export location in bigquery
        `tfc-test-356921.youtube.events_20210131` 

    ),
    unnest(user_properties) as user_properties







    # 


    select
    max(ga_session_id) over (partition by event_timestamp,event_name) as ga_session_id,
    concat(user_pseudo_id,event_timestamp,event_name,dedup_id) as join_key,
    * except(ga_session_id)
from (
    select
        user_pseudo_id,
        case when event_params.key = 'ga_session_id' then event_params.value.int_value else null end as ga_session_id,
        event_timestamp,
        event_name,
        event_params.key,
        event_params.value.string_value,
        event_params.value.int_value,
        event_params.value.float_value,
        event_params.value.double_value,
        dedup_id
    from (
        select
            row_number() over(partition by user_pseudo_id, event_timestamp, event_name) as dedup_id,
            *
        from
            -- change this to your google analytics 4 export location in bigquery
            `tfc-test-356921.youtube.events_20210131` 

            ),
        unnest(event_params) as event_params)



        select 
        user_pseudo_id,
        event_timestamp,
        event_name,
        user_properties.key,
        user_properties.value.string_value,
        user_properties.value.int_value,
        user_properties.value.float_value,
        user_properties.value.double_value,
        user_properties.value.set_timestamp_micros,
        concat(user_pseudo_id,event_timestamp,event_name,dedup_id) as join_key
    from (
        select 
            row_number() over(partition by user_pseudo_id, event_timestamp, event_name) as dedup_id,
            *
        from
            `tfc-test-356921.youtube.events_20210131` 
    
        ),
        unnest(user_properties) as user_properties

        



        select
        (select value.int_value from unnest(event_params) where key = 'ga_session_id') as ga_session_id,
        * except(event_params,user_properties,items),
        concat(user_pseudo_id,event_timestamp,event_name,row_number() over(partition by user_pseudo_id, event_timestamp, event_name)) as join_key
    from
        -- change this to your google analytics 4 export location in bigquery
        `tfc-test-356921.youtube.events_20210131` 
    where
        -- define static and/or dynamic start and end date
        _table_suffix between '20201201'
        and format_date('%Y%m%d',date_sub(current_date(), interval 1 day))
    


        select
    max(ga_session_id) over (partition by event_timestamp,event_name) as ga_session_id,
    concat(user_pseudo_id,event_timestamp,event_name,dedup_id) as join_key,
    * except(ga_session_id)
from (
    select
        user_pseudo_id,
        case when event_params.key = 'ga_session_id' then event_params.value.int_value else null end as ga_session_id,
        event_timestamp,
        event_name,
        event_params.key,
        event_params.value.string_value,
        event_params.value.int_value,
        event_params.value.float_value,
        event_params.value.double_value,
        dedup_id
    from (
        select
            row_number() over(partition by user_pseudo_id, event_timestamp, event_name) as dedup_id,
            *
        from
            -- change this to your google analytics 4 export location in bigquery
            `tfc-test-356921.youtube.events_20210131` 
            where
            -- define static and/or dynamic start and end date
            _table_suffix between '20201201' and format_date('%Y%m%d',date_sub(current_date(), interval 1 day))),
        unnest(event_params) as event_params)


## Flatter one field

select 
(select value.int_value from unnest(event_params) where key = 'ga_session_id') as ga_session_id,
* except(event_params,user_properties,items),
concat(user_pseudo_id,event_timestamp,event_name,row_number() over(partition by user_pseudo_id, event_timestamp, event_name)) as join_key
from
`tfc-test-356921.youtube.events_20210131` 

## Flatten


Select
max(ga_session_id) over (partition by event_timestamp,event_name) as ga_session_id,
concat(user_pseudo_id,event_timestamp,event_name,dedup_id) as join_key,
* except(ga_session_id)
from (
select
    user_pseudo_id,
    case when event_params.key = 'ga_session_id' then event_params.value.int_value else null end as ga_session_id,
    event_timestamp,
    event_name,
    event_params.key,
    event_params.value.string_value,
    event_params.value.int_value,
    event_params.value.float_value,
    event_params.value.double_value,
    dedup_id
from (
    select
        row_number() over(partition by user_pseudo_id, event_timestamp, event_name) as dedup_id,
        *
    from
        -- change this to your google analytics 4 export location in bigquery
        `tfc-test-356921.youtube.events_20210131` ),
    unnest(event_params) as event_params)




## Flat Items

select
    user_pseudo_id,
    event_timestamp,
    event_name,
    items.item_id,
    items.item_name,
    items.item_brand,
    items.item_variant,
    items.item_category,
    items.item_category2,
    items.item_category3,
    items.item_category4,
    items.item_category5,
    items.price_in_usd,
    items.price,
    items.quantity,
    items.item_revenue_in_usd,
    items.item_revenue,
    items.item_refund_in_usd,
    items.item_refund,
    items.coupon,
    items.affiliation,
    items.location_id,
    items.item_list_id,
    items.item_list_name,
    items.item_list_index,
    items.promotion_id,
    items.promotion_name,
    items.creative_name,
    items.creative_slot,
    concat(user_pseudo_id,event_timestamp,event_name,dedup_id) as join_key
from (
    select
        row_number() over(partition by user_pseudo_id, event_timestamp, event_name) as dedup_id,
        *
    from 
    -- change this to your google analytics 4 export location in bigquery
    `tfc-test-356921.youtube.events_20210131` ),
    unnest(items) as items



select
    events.device.category,
    count(distinct events.user_pseudo_id) as users,
    count(distinct concat(events.user_pseudo_id,events.ga_session_id)) as sessions,
    count(distinct case when event_params.event_name = 'user_engagement' and event_params.key = 'session_engaged' and event_params.string_value = '1' then event_params.user_pseudo_id else null end) as engaged_users,
    count(distinct case when event_params.event_name = 'user_engagement' and event_params.key = 'session_engaged' and event_params.string_value = '1' then concat(events.user_pseudo_id,events.ga_session_id) else null end) as engaged_sessions,
    count(distinct case when items.event_name = 'add_to_cart' then concat(events.user_pseudo_id,events.ga_session_id) else null end) as sessions_with_add_to_cart
from
    -- change this to your google analytics 4 export location in bigquery
    `tfc-test-356921.youtube.events_20210131`  as events
    left join `ga4bigquery.analytics_250794857.flat_event_params` as event_params on events.join_key = event_params.join_key
    left join `ga4bigquery.analytics_250794857.flat_items` as items on events.join_key = items.join_key
where
    -- define static and/or dynamic start and end date
    event_date between '20191201' and format_date('%Y%m%d',date_sub(current_date(), interval 1 day))
group by
    device.category